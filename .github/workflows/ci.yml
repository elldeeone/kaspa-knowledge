name: Continuous Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  PYTHON_VERSION: '3.9'
  NODE_VERSION: '18'

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install Python linting tools
      run: |
        python -m pip install --upgrade pip
        pip install black flake8 pylint mypy
        
    - name: Install Node.js linting tools
      run: |
        npm install -g eslint prettier
        npm ci
        
    - name: Check Python formatting with Black
      run: black --check --diff scripts/
      
    - name: Lint Python code with flake8
      run: flake8 scripts/ --max-line-length=88 --extend-ignore=E203,W503
      
    - name: Lint Python code with pylint
      run: pylint scripts/ --disable=C0114,C0116,R0903
      continue-on-error: true
      
    - name: Type check Python code
      run: mypy scripts/ --ignore-missing-imports
      continue-on-error: true
      
    - name: Check JavaScript formatting
      run: prettier --check scripts/**/*.js
      continue-on-error: true
      
    - name: Lint JavaScript code
      run: eslint scripts/**/*.js
      continue-on-error: true

  test-python:
    name: Test Python Components
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock
        
    - name: Run Python tests
      run: |
        pytest tests/ -v --cov=scripts/ --cov-report=xml --cov-report=term
      continue-on-error: true
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: python
      continue-on-error: true

  test-node:
    name: Test Node.js Components
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16', '18', '20']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Node.js tests
      run: npm test
      continue-on-error: true
      
    - name: Run Node.js linting
      run: npm run lint
      continue-on-error: true

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit
        
    - name: Check Python dependencies for vulnerabilities
      run: safety check --json
      continue-on-error: true
      
    - name: Run Python security analysis
      run: bandit -r scripts/ -f json
      continue-on-error: true
      
    - name: Run npm audit
      run: npm audit --audit-level=moderate
      continue-on-error: true

  validate-config:
    name: Validate Configuration Files
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install validation tools
      run: |
        python -m pip install --upgrade pip
        pip install jsonschema pyyaml
        
    - name: Validate JSON files
      run: |
        python -c "
        import json
        import sys
        
        files = ['package.json', 'book.json']
        for file in files:
          try:
            with open(file) as f:
              json.load(f)
            print(f'✓ {file} is valid JSON')
          except Exception as e:
            print(f'✗ {file} is invalid: {e}')
            sys.exit(1)
        "
        
    - name: Validate requirements.txt
      run: |
        python -m pip install --dry-run -r requirements.txt
        
    - name: Check for duplicate dependencies
      run: |
        python -c "
        with open('requirements.txt') as f:
          lines = [line.split('>=')[0].split('==')[0].strip() for line in f if line.strip() and not line.startswith('#')]
        
        duplicates = set([x for x in lines if lines.count(x) > 1])
        if duplicates:
          print(f'Duplicate dependencies found: {duplicates}')
          exit(1)
        else:
          print('No duplicate dependencies found')
        "

  dependency-check:
    name: Dependency Version Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Check for outdated Python packages
      run: |
        python -m pip install --upgrade pip
        pip install pip-check
        pip install -r requirements.txt
        pip-check
      continue-on-error: true
      
    - name: Check for outdated Node packages
      run: |
        npm ci
        npm outdated
      continue-on-error: true 